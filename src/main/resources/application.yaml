server:
  port: 8080
spring:
  application:
    name:messageQueue
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      acks: 1
      # 设置大于0的值将使客户端重新发送任何数据。
      # 注意，这些重试与客户端接收到发送错误时的重试没有什么不同。允许重试将潜在的改变数据的顺序，如果这两个消息记录都是发送到同一个partition，则第一个消息失败第二个发送成功，则第二条消息会比第一条消息出现要早。
      retries: 4
      # producer可以用来缓存数据的内存大小。如果数据产生速度大于向broker发送的速度，producer会阻塞或者抛出异常，
      # 默认值33554432，单位bytes
      buffer-memory: 33554432
      # key的序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # value的序列化类
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      compression-type: none

  data:
    redis:
      # 连接地址
      host: localhost
      # 端口
      port: 6379
      # 数据库
      database: 0
      # 用户名，如果有
      # username:
      password: 123456
      # 连接超时
      connect-timeout: 5s
      # 读超时
      timeout: 5s

      # Lettuce 客户端的配置
      lettuce:
        # 连接池配置
        pool:
          # 最小空闲连接
          min-idle: 0
          # 最大空闲连接
          max-idle: 8
          # 最大活跃连接
          max-active: 8
          # 从连接池获取连接 最大超时时间，小于等于0则表示不会超时
          max-wait: -1ms
rocketmq:
  name-server: localhost:9876
  consumer:
    group: order



